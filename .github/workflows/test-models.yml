name: Test models

on:
  push:
    branches: [master]
  pull_request:
    branches: ['*']
  schedule:
  - cron: "0 5 * * TUE"

# Cancel any in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Build the Python SDist and wheel, performs metadata and readme linting
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0   # Needed for setuptools_scm
    - uses: hynek/build-and-inspect-python-package@v2
      id: baipp

    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}

  test-pypsa-eur:
    name: PyPSA-Eur run
    needs: [build]
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'PyPSA/pypsa-eur'
      
    - name: Setup secrets
      run: |
        echo -ne "url: ${CDSAPI_URL}\nkey: ${CDSAPI_TOKEN}\n" > ~/.cdsapirc

    - name: Set cache dates
      run: |
        echo "week=$(date +'%Y%U')" >> $GITHUB_ENV # data and cutouts
        echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_ENV # env

    - name: Cache data and cutouts folders
      uses: actions/cache@v4
      with:
        path: |
          data
          cutouts
        key: data-cutouts-${{ env.week }}

    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: pypsa-eur

    - name: Cache Conda env
      uses: actions/cache@v4
      with:
        path: ${{ env.CONDA }}/envs
        key: conda-${{ runner.os }}--${{ runner.arch }}--${{ env.today }}-${{ hashFiles('envs/environment.yaml') }}
      id: cache-env

    - name: Update environment
      if: steps.cache-env.outputs.cache-hit != 'true' && matrix.os != 'macos'
      run: conda env update -n pypsa-eur -f envs/environment.yaml

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: Packages
        path: dist

    - name: Install package and dependencies
      run: |
        python -m pip install uv
        uv pip install --system "$(ls dist/*.whl)"

    - name: Run snakemake test workflows
      run: |
        ./test.sh

